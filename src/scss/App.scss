@use "./media" as media;
@use "./typography" as typog;
@use "./variables" as variables;


code {
	font-family: "Courier Prime", "Courier New", monospace;
	border: 1px solid transparent;
	border-radius: 3px;
	background-color: variables.$peachSubdued;
	padding: 3px;
	color: black;
}

a {
	text-decoration: none;
	color: variables.$pinkLight;
	display: inline-block;
	width: fit-content;
}

a:visited {
	color: variables.$pinkMedium;
}

a:hover,
a:focus,
a:active {
	text-decoration: underline;
}

a:hover {
	cursor: pointer;
}

nav {
	ul {
		margin: 0;
		padding: 0;
		list-style: none;
	}

	li {
		display: inline-block;
	}
}

.skip-link {
	position: absolute;
	left: -9999px;
	z-index: 999;
	padding: 1em;
	background-color: white;
	color: variables.$blueDark;
	opacity: 0;
}
.skip-link:focus {
	left: 50%;
	transform: translateX(-50%);
	opacity: 1;
	color: variables.$blueDark;
	font-size: 1.2em;
	outline: none;
}
//

html,
body {
	margin: 0;
	padding: 0;
}
body {
	min-height: 100vh;
	color: variables.$tealBrightPale;
	background-color: #333355;
	background-image: variables.$spaceBackground;
	background-attachment: fixed;
	background-repeat: no-repeat;
	background-size: cover;
	/* background by SVGBackgrounds.com */
}
* {
	box-sizing: border-box;
}

.App {
	height: 100%;
	width: 100%;
	font-size: typog.$textSize;
}
.title {
	writing-mode: vertical-lr;
	position: fixed;
	top: 0;
	padding: 1rem 0rem;
}
main {
	// width: calc(100% - 2rem);
	width: 100%;
	padding: 0;
	padding-left: 3rem;
	margin: 0 auto;
	@media (min-width: media.$breakpoint-medium) {
		width: 90%

	}
	@media (min-width: media.$breakpoint-large) {
		// width: calc(90% - 20rem);
		width: 85%;

	}
	@media (min-width: media.$breakpoint-large) {
		max-width: 80rem;

	}
}

// to prevent either of these items from being too wide
.aboutMe,
.projects {
	width: 100%;
	padding: 0 1rem;
}
.aboutMe{
	padding: 1rem;
	margin-top: 1rem;
	margin-right: 2rem;
	background-color: variables.$blueGreyOpaqueDarker;
	box-shadow: 5px 4px 0px 0px rgba(0, 0, 0, 1);
	max-width: 80rem;
	@media (min-width: media.$breakpoint-small) {
		width: 70%;
		margin: 0 auto;
	}
	@media (min-width: media.$breakpoint-medium) {
		width: 80%;
		margin: 0 auto;
	}
}
.intro {
	padding: 1rem;
}

.codingFavourites {
	display: flex;
	justify-content: space-between;
}
.arrowContainer {
	display: flex;
	justify-content: center;
	position: relative;
	top: 0rem;
	left: 0rem;
	.arrow {
		height: 4rem;
		position: relative;
		bottom: 4rem;
		left: 0rem;
		animation: .9s linear infinite arrow-down;
	}
	@keyframes arrow-down {
		from {
			transform: translateY(4rem);
			fill: variables.$tealMedium;
		}
		to {
			
			transform: translateY(6rem);
			fill: transparent;
		}
	}
}
.buttonContainer {
	position: relative;
	top: 0;
	margin: 1rem auto;

	button {
		font-size: typog.$textSize;
		text-align: center;
		width: 100%;
		max-width: inherit;
		height: 4rem;
		// padding: 0.3rem 4rem;
		border: 1px solid transparent;
		border-radius: 6px;
		// margin: 0.5rem; // do not add this back it's really annoying to debug
		// border: 1px solid transparent;
		background-color: variables.$tealMedium;
		color: variables.$tealBright;
		cursor: pointer;
		animation: ping-surge 1.3s ease-in-out infinite;
		animation-timing-function: cubic-bezier(0.1, -0.6, 0.2, 0);
	}

	@keyframes ping-surge {
		50% {
			box-shadow: -2px 0px variables.$tealMedium,
				2px 0px variables.$tealMedium, 0px -2px variables.$tealMedium,
				2px 0px variables.$tealMedium;
		}
	}
}

//
.projects {
	--grid-layout-gap: 1rem;
	--grid-column-count: 1;
	--grid-item--min-width: 15rem;
	// --grid-item--min-width: calc(15rem);

	/** css-tricks! https://css-tricks.com/an-auto-filling-css-grid-with-max-columns/ * Calculated values.   */
	--gap-count: calc(var(--grid-column-count) - 1);
	--total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
	--grid-item--max-width: calc(
		(100% - var(--total-gap-width)) / var(--grid-column-count)
	);

	display: grid;
	grid-template-columns: repeat(
		auto-fill,
		minmax(
			max(var(--grid-item--min-width), var(--grid-item--max-width)),
			1fr
		)
	);
	grid-gap: var(--grid-layout-gap);
	.singleTile {
		border: solid 1px variables.$blueGreySemiOpaque;
		margin: 1rem;
		background-color: variables.$blueGreyOpaqueDarker;
		box-shadow: 5px 4px 0px 0px rgba(0, 0, 0, 1);

		color: variables.$pinkPale;
		.buttonContainer {
			display: flex;
			justify-content: center;
			button{
				width: 100%;
			}
		}
		.projectText {
			background-color: variables.$blueGreyOpaqueDarker;
		}
	}
	.singleTile:hover, 
	.singleTile:focus {
		transform: scale(1.02);
		transition: transform 0.2s ease;
		button {
			background-color: variables.$tealBright;
			color: variables.$tealMedium;
			transform: scale(1.2);
			transition: transform 0.2s ease;
		}
		@keyframes ping-surge {
			50% {
				box-shadow: -1px 0px variables.$tealMedium,
					1px 0px variables.$tealMedium,
					0px -1px variables.$tealMedium,
					1px 0px variables.$tealMedium;
			}
		}
		z-index: 10;
	}
	img,
	.summary {
		width: calc(99% - 2rem);
		// width: 99%;
		margin: 0 1rem;
	}
	img {
		margin: 0;
		width: 100%;
		clip-path: inset(3% 3% 3% 3%);
	}

	@media (min-width: media.$breakpoint-small) {
		// width: 95%;
		--grid-layout-gap: 0.5rem;
		--grid-column-count: 1;
		--grid-item--min-width: 18rem;
	}
	@media (min-width: media.$breakpoint-medium) {
		width: 95%;
		--grid-layout-gap: 0.5rem;
		--grid-column-count: 1;
		--grid-item--min-width: 20rem;
	}

	@media (min-width: media.$breakpoint-large) {
		width: 90%;
		--grid-layout-gap: 0.5rem;
		--grid-column-count: 2;
		--grid-item--min-width: 22rem;
		margin: 0 auto;
	}
}

.single-page {
	height: 100%;
	width: 100%;
	.singleProject {
		padding: 1rem 1rem 3rem 1rem;
		margin-right: 2rem;
		background-color: variables.$blueGreyOpaqueDarker;
		box-shadow: 5px 4px 0px 0px rgba(0, 0, 0, 1);
		max-width: 80rem;
		@media (min-width: media.$breakpoint-small) {
			width: 70%;
			margin: 0 auto;
		}
		@media (min-width: media.$breakpoint-medium) {
			width: 80%;
			max-width: 90rem;
			margin: 0 auto;
		}
	}

	.projectTitle {
		font-size: 1.9;
	}
	.projectPicture {
		width: calc(99% - 2rem);
		// width: 99%;
		margin: 0 1rem;
	}
	.snapshotContainer{
		display: flex;
		justify-content: center;
	.projectSnapshot {
		// make this better
		width: calc(49% - 2rem);
		padding: 1rem;
	}}
	.section1 {
		background-color: variables.$greyAlmostTransparent;
		padding: 1rem;
	}
}
.singleTile {
	margin: 1rem;
	display: inline-block;
	h2 {
		margin-left: 1rem;
	}
}

// TO DO:
// DONE make tiles-container responsive (media queries),
// DONE: take out the lovely borders lol
// DONE: also consider how I would make a grid?
// add skip to link functionality for real

#site-navigation {
	// position top or position bottom is NECESSARY
	width: 100%;
	height: 2.5rem;
	position: fixed;
	bottom: 0px;
	background-color: variables.$blueGreySlightlyTransparent;
	z-index: 1000;
	ul {
		display: flex;
		justify-content: space-around;
	}
	@media (min-width: media.$breakpoint-medium) {
		background-color: transparent;
		padding: 2rem 3rem 2rem 1rem;
		width: 1rem;
		writing-mode: vertical-lr;
		height: -moz-fit-content;
		height: calc(60% - 20px );

		// TO DO: check if this is what i want when i add more  items to menu
		a :hover, 
		a :focus {
			transform: scale(1.02);
			transition: transform 0.2s ease;
			a {
				text-decoration: underline;
			}
		}
	}
}

// add media query here for medium+ screen nav

footer {
	// position: relative;
	padding: 4rem 1rem 3rem;
	font-size: small;
	// margin: 4rem 0 3rem;
	ul {
		display: flex;
		justify-content: space-around;
		padding: 0;
		li {
			list-style: none;
		}
	}
}
